language: cpp
services:
  - docker
jobs:
  include:
    # Arch x86_64
    - env: package_format=arch docker_image=archlinux:latest dist= arch=
      arch: amd64
    # CentOS x86_64
    - env: package_format=rpm docker_image=centos:8 dist=1.el8 arch=x86_64
      arch: amd64
    # CentOS armv8
    - env: package_format=rpm docker_image=arm64v8/centos:8 dist=1.el8 arch=aarch64
      arch: arm64
      if: branch = master
    # Ubuntu amd64
    - env: package_format=deb docker_image=ubuntu:jammy dist=jammy arch=amd64
      arch: amd64
    - env: package_format=deb docker_image=ubuntu:focal dist=focal arch=amd64
      arch: amd64
    - env: package_format=deb docker_image=ubuntu:bionic dist=bionic arch=amd64
      arch: amd64
    - env: package_format=deb docker_image=ubuntu:xenial dist=xenial arch=amd64
      arch: amd64
    # Ubuntu i386
    # i386 version of focal is currently buggy.
    # - env: package_format=deb docker_image=i386/ubuntu:focal dist=focal arch=i386
    #   arch: amd64
    - env: package_format=deb docker_image=i386/ubuntu:bionic dist=bionic arch=i386
      arch: amd64
      if: branch = master
    - env: package_format=deb docker_image=i386/ubuntu:xenial dist=xenial arch=i386
      arch: amd64
      if: branch = master
    # Debian amd64
    - env: package_format=deb docker_image=debian:bookworm dist=bookworm arch=amd64
      arch: amd64
    - env: package_format=deb docker_image=debian:bullseye dist=bullseye arch=amd64
      arch: amd64
    - env: package_format=deb docker_image=debian:buster dist=buster arch=amd64
      arch: amd64
    - env: package_format=deb docker_image=debian:stretch dist=stretch arch=amd64
      arch: amd64
    # Debian i386
    - env: package_format=deb docker_image=i386/debian:bookworm dist=bookworm arch=i386
      arch: amd64
      if: branch = master
    - env: package_format=deb docker_image=i386/debian:bullseye dist=bullseye arch=i386
      arch: amd64
      if: branch = master
    - env: package_format=deb docker_image=i386/debian:buster dist=buster arch=i386
      arch: amd64
      if: branch = master
    - env: package_format=deb docker_image=i386/debian:stretch dist=stretch arch=i386
      arch: amd64
      if: branch = master
    # Debian armv8
    - env: package_format=deb docker_image=arm64v8/debian:bookworm dist=bookworm arch=arm64
      arch: arm64
      if: branch = master
    - env: package_format=deb docker_image=arm64v8/debian:bullseye dist=bullseye arch=arm64
      arch: arm64
      if: branch = master
    - env: package_format=deb docker_image=arm64v8/debian:buster dist=buster arch=arm64
      arch: arm64
      if: branch = master
    - env: package_format=deb docker_image=arm64v8/debian:stretch dist=stretch arch=arm64
      arch: arm64
      if: branch = master
    # Debian armv7
    - env: package_format=deb docker_image=arm32v7/debian:bookworm dist=bookworm arch=armhf
      arch: arm64
      if: branch = master
    - env: package_format=deb docker_image=arm32v7/debian:bullseye dist=bullseye arch=armhf
      arch: arm64
      if: branch = master
    - env: package_format=deb docker_image=arm32v7/debian:buster dist=buster arch=armhf
      arch: arm64
      if: branch = master
    - env: package_format=deb docker_image=arm32v7/debian:stretch dist=stretch arch=armhf
      arch: arm64
      if: branch = master
    # Debian armv6 (Raspberry Pi)
    - env: package_format=deb docker_image=balenalib/rpi-raspbian:bookworm dist=bookworm arch=rpi
      arch: arm64
      if: branch = master
    - env: package_format=deb docker_image=balenalib/rpi-raspbian:bullseye dist=bullseye arch=rpi
      arch: arm64
      if: branch = master
    - env: package_format=deb docker_image=balenalib/rpi-raspbian:buster dist=buster arch=rpi
      arch: arm64
      if: branch = master
    - env: package_format=deb docker_image=balenalib/rpi-raspbian:stretch dist=stretch arch=rpi
      arch: arm64
      if: branch = master
before_install: gem install mtime_cache
script:
  - mtime_cache -c vendor/.mtime_cache/cache.json 'vendor/mupdf/**/*'
  - |
    packaging/build-and-check-package-with-docker.sh \
      "${package_format}" \
      "${docker_image}" \
      "${TRAVIS_COMMIT}" "${dist}" "${arch}"
cache:
  directories:
    - vendor/mupdf/build
    - vendor/.mtime_cache
before_deploy: |
  sudo chown -R "${USER}" upload && \
  mkdir upload-gcs && \
  mv upload "upload-gcs/${TRAVIS_BUILD_NUMBER}-${TRAVIS_COMMIT}"
deploy:
  skip_cleanup: true
  provider: gcs
  access_key_id: ${GCS_ACCESS_KEY_ID}
  secret_access_key: ${GCS_SECRET_ACCESS_KEY}
  bucket: ${GCS_BUCKET}
  local_dir: upload-gcs
  on:
    repo: jichu4n/jfbview
    all_branches: true

